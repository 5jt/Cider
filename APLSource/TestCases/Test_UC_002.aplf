 r←Test_UC_002(stopFlag batchFlag);⎕TRAP;tempDir1;parms;res;rc;msg;result;tempDir2;config;list
⍝ Exercise the user command on "CloseProject" with a not fully qualified name
⍝ The user command should ask the suer because there are two projects "Firlefanz__", in # and ⎕SE
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed
 :If batchFlag
     r←T._NoBatchTest
     :Return
 :EndIf
 0 0⍴⍞,0/⎕←'This test needs you: select the second option when asked; continue with <enter>'

 tempDir1←FilesAndDirs.GetTempSubDir(⊃⎕SI),'_1'
 (tempDir1,'/cider.config')⎕NCOPY(##.CiderConfig.HOME,'/TestData/cider.config.Foo')

 tempDir2←FilesAndDirs.GetTempSubDir(⊃⎕SI),'_2'
 (tempDir2,'/cider.config')⎕NCOPY(##.CiderConfig.HOME,'/TestData/cider.config.Foo')

 config←∆GetJSON5 tempDir1,'/cider.config'
 config.CIDER.projectSpace←'Firlefanz__'
 (⊂⎕JSON⍠('Compact' 0)('Dialect' 'JSON5')⊣config)⎕NPUT(tempDir1,'/cider.config')1
 {}⎕SE.UCMD'Cider.CreateProject "',tempDir1,'" -noEdit -acceptConfig'
 parms←##.Cider.CreateOpenParms ⍬
 parms.folder←tempDir1
 parms.quietFlag←1
 res←##.Cider.OpenProject parms

 config.CIDER.parent←'⎕SE'
 (⊂⎕JSON⍠('Compact' 0)('Dialect' 'JSON5')⊣config)⎕NPUT(tempDir2,'/cider.config')1
 {}⎕SE.UCMD'Cider.CreateProject "',tempDir2,'" -noEdit -acceptConfig'
 parms←##.Cider.CreateOpenParms ⍬
 parms.folder←tempDir2
 parms.quietFlag←1
 res←##.Cider.OpenProject parms

 (rc msg result)←∆UCMD'CloseProject Firlefanz__'    ⍝ Without "#." or "⎕SE"
 Assert 0=rc
 {}∆UCMD'CloseProject Firlefanz__'                   ⍝ Close the other one
 list←##.Cider.ListOpenProjects 0
 →T.GoToTidyUp 0≠+/'#.Firlefanz__' '⎕SE.Firlefanz__'∊list[;1]

 r←T._OK

∆TidyUp:
 FilesAndDirs.RmDir tempDir1
 FilesAndDirs.RmDir tempDir2
 #.⎕EX'Firlefanz__'
 ⎕SE.⎕EX'Firlefanz__'
⍝Done
