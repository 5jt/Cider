 {r}←{codeVoverageFilename}Prepare_ batch;testPath;codeVoverageFilename;ask;answer;options;flag;ind
⍝ Creates an instance of the class `Tester2` named `T` and configures it for
⍝ Assumes that the project is handled by the project manager "Cider", and that there is
⍝ a namespace ##.CiderConfig available with the Cider config parameters.
⍝ As a side effect is creates a folder "TestResults" in the project's root folder if the
⍝ user wants to do code coverage with the `CodeCoverage` class.
⍝ This function should be called via `Prepare` by the user but directly by test cases that
⍝ are executed in their own process, so that they can add to the code coverage file.
 ⎕IO←1 ⋄ ⎕ML←1
 r←⍬
 T←⎕NEW Tester2 ⎕THIS
 testPath←##.CiderConfig.HOME,'/TestResults'
 codeVoverageFilename←{0<⎕NC ⍵:⍎⍵ ⋄ testPath,'/CodeCoverage'}'codeVoverageFilename'
 flag←0
 :If ⎕NEXISTS testPath
     :If 0<≢codeVoverageFilename            ⍝ Then we don't want code coverage
     :AndIf ⎕NEXISTS codeVoverageFilename,'.profile'
         :If batch
             ind←1                  ⍝ In batch mode we always add...
             flag←0<≢codeVoverageFilename   ⍝ ... if `codeVoverageFilename` is not empty
         :Else
             ind←('Code Coverage' 0 1)CommTools.Select'Append' 'Replace' 'Neither'
             →(3=ind)/0
             flag←1
             :If 2=ind
                 1 CodeCoverage.DeleteFiles codeVoverageFilename
             :EndIf
         :EndIf
     :Else
         flag←0 CommTools.YesOrNo'Code coverage?'
     :EndIf
 :Else
     flag←0 CommTools.YesOrNo'Code coverage?'
 :EndIf
 :If flag
     3 ⎕MKDIR testPath              ⍝
     T.codeCoverage←⎕NEW CodeCoverage(,⊂'#.',{⍵,'.',⍵}2↓⍕⎕THIS.##)
     T.codeCoverage.filename←codeVoverageFilename
 :EndIf
 :If ~batch
     T.exec_after_each_test←(⍕⎕THIS),'.CheckTempDirForLeftOvers'
 :EndIf
