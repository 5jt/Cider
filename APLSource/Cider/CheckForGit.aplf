 {r}←CheckForGit(path config parms);status;dmx
⍝ Checks whether the project is managed by Git, and if so offers some help, unless parms.batch=1
 r←⍬
 :If 0=parms.batch
 :AndIf F.Exists(AddSlash path),'.git'
     :Trap 0
         status←G.Status path
     :Else
         dmx←⎕DMX
         :If 127=dmx.EN
             (1 parms.batch)p'The project appears to be managed by Git but Git is not installed?!'
             :Return
         :ElseIf 128=dmx.EN
             (1 parms.batch)p'The project appears to be managed by Git but user.email and/or user.name are not defined'
             :Return
         :ElseIf 0<≢dmx.Message
             (1 parms.batch)p'The Git status of the project could not be determined due to an error:'
             (1 parms.batch)p dmx.Message,'; rc=',⍕dmx.EN
             :Return
         :Else
             (1 parms.batch)p'The Git status of the project could not be determined due to an error'
             :Return
         :EndIf
     :EndTrap
     :If ∧/∨/¨'nothing to commit' 'working tree clean'⍷¨⊂∊status
     :AndIf ~∨/∨/¨'on branch main' 'on branch master'⍷¨⊂⎕C∊status
         (1 parms.batch)p'Git: ',(1⊃status),', ',⊃{⍺,', ',⍵}/1↓status
     :ElseIf 0=parms.batch
         status←(↓(,[0.5]'Git status report')⍪'='),status
         {{}(#.⎕NS'').(⎕ED⍠('ReadOnly' 1)&{'GIT_Status_Report'}GIT_Status_Report←⍵)}⍪status
     :EndIf
 :EndIf
