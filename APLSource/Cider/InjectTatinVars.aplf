  {r}←InjectTatinVars(projectRoot folder);cfg;ref
⍝ When a package is loaded a namespace `TatinVars` is injected into the root of the package by Tatin.
⍝ In case `projectSpace` is a Tatin package, Cider is injecting this into the root of the project (rather
⍝ than the package!) by default, but you can inject a property `tatinVars` into the Cider config file
⍝ (as part of `CONFIG`) in order to overwrite this by specifying the name of a sub-namespace.
⍝ Whether the project is a going to be a package is determined by looking for a file ⎕se._Tatin.Registry.CFG_Name.
⍝ This allows a developer working on the project to access `TatinVars` as if it were loaded as a package.
⍝ In case `TatinVars` is injected a 1 is returned, otherwise a 0.
 r←0
 :If ⎕NEXISTS folder,'/',⎕SE._Tatin.Registry.CFG_Name
     cfg←⎕SE._Tatin.Registry.ReadPackageConfigFile folder
     :If 0<projectRoot.CiderConfig.CIDER.⎕NC'tatinVars'
     :AndIf 0<≢projectRoot.CiderConfig.CIDER.tatinVars
     :AndIf 9=projectRoot.⎕NC projectRoot.CiderConfig.CIDER.tatinVars
         ref←projectRoot⍎projectRoot.CiderConfig.CIDER.tatinVars
     :Else
         ref←projectRoot
     :EndIf
     ⎕SE._Tatin.Client.EstablishStuffInTatinVars ref cfg folder
     r←1
 :EndIf
