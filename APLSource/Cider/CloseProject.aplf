 r←{performChecks}CloseProject projects;list;project;ind;res;list;closed;buff
⍝ Breaks the Link between a project and its folder on disk, and potentially executes a check functon afterwards.
⍝ In case ⍵ is empty, ALL projects are closed.
⍝ `projects` may be one of:
⍝ 1. Empty vector (=close all)
⍝ 2. One or more project names like `#.Foo`
⍝ 3. One or more alias names like `[my-alias]`
⍝ 4. One or more paths of currently open projects
⍝ 5. A mixture of 2, 3 and 4
⍝ `x` can be a Boolean that defaults to 1, meaning "perform checks, if any"; see "CheckForDropboxConflicts" as
⍝ an example.
⍝ A 0 as left argument would therefore prevent checks from being performed.
⍝ Returns the number of projects closed.
 r←0
 performChecks←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'performChecks'
 list←ListOpenProjects 1
 :If 0<≢list
     :If 0=≢projects
         res←{⎕SE.Link.Break ⍵}¨list
         r←+/{'Unlinked: '{⍺≡(≢⍺)↑⍵}⍵}¨res[;1]
     :Else
         closed←''
         list[;2]←F.NormalizePath list[;2]
         projects←⊆projects
         :For project :In projects
             project←⍕project
             :If ∧/'[]'∊project
                 ind←list[;4]⍳⊂⎕C project~'[]'
             :Else
                 :If (∧/~'/\'∊project)∧~(1⊃project)∊'#⎕'
                     buff←(({⊃(-+/∧\~'⎕'=⊃¨⍵)↑⍵}⎕NSI),'.'),project
                     :If 9≠⊃⎕NC buff
                         :Continue
                     :EndIf
                     project←buff
                 :EndIf
                 ind←(⎕C list[;1])⍳⊂⎕C project
             :EndIf
             :If ind>≢list
                 ind←list[;2]⍳⊂F.NormalizePath project
             :EndIf
             :If ind≤≢list
                 res←⎕SE.Link.Break 1⊃list[ind;]
                 r+←'Unlinked: '{⍺≡(≢⍺)↑⍵}res
                 closed,←list[ind;2]
             :EndIf
         :EndFor
         :If performChecks
             {}CheckForDropboxConflicts¨closed
         :EndIf
     :EndIf
 :EndIf
